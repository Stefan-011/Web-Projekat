// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(ProjectContext))]
    partial class ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Models.ETeam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Naziv");

                    b.Property<int>("MaxIgraci")
                        .HasColumnType("int")
                        .HasColumnName("MaxIgraci");

                    b.Property<int?>("SpozorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SpozorID");

                    b.ToTable("ETeam");
                });

            modelBuilder.Entity("Models.Igrac", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("GodineStaza")
                        .HasColumnType("int")
                        .HasColumnName("GodineStaza");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Ime");

                    b.Property<string>("Nadimak")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Nadimak");

                    b.Property<int>("PozicijaID")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Prezime");

                    b.Property<int?>("TimID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PozicijaID");

                    b.HasIndex("TimID");

                    b.ToTable("Igrac");
                });

            modelBuilder.Entity("Models.Pozicija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Ime");

                    b.HasKey("ID");

                    b.ToTable("Pozicija");
                });

            modelBuilder.Entity("Models.Sponzor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Iznos")
                        .HasColumnType("int")
                        .HasColumnName("Iznos");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Naziv");

                    b.HasKey("ID");

                    b.ToTable("Sponzor");
                });

            modelBuilder.Entity("Models.Trener", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("GodineStaza")
                        .HasColumnType("int")
                        .HasColumnName("GodineStaza");

                    b.Property<string>("Nadimak")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Ime");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Prezime");

                    b.Property<int?>("TimID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TimID");

                    b.ToTable("Trener");
                });

            modelBuilder.Entity("Models.ETeam", b =>
                {
                    b.HasOne("Models.Sponzor", "Spozor")
                        .WithMany()
                        .HasForeignKey("SpozorID");

                    b.Navigation("Spozor");
                });

            modelBuilder.Entity("Models.Igrac", b =>
                {
                    b.HasOne("Models.Pozicija", "Pozicija")
                        .WithMany()
                        .HasForeignKey("PozicijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.ETeam", "Tim")
                        .WithMany("Igraci")
                        .HasForeignKey("TimID");

                    b.Navigation("Pozicija");

                    b.Navigation("Tim");
                });

            modelBuilder.Entity("Models.Trener", b =>
                {
                    b.HasOne("Models.ETeam", "Tim")
                        .WithMany()
                        .HasForeignKey("TimID");

                    b.Navigation("Tim");
                });

            modelBuilder.Entity("Models.ETeam", b =>
                {
                    b.Navigation("Igraci");
                });
#pragma warning restore 612, 618
        }
    }
}
